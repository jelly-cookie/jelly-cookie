name: Fetch News and Deploy

on:
  schedule:
    - cron: '*/30 * * * *'  # Run every 30 minutes
  workflow_dispatch:  # Allow manual trigger
  push:
    branches: [ main ]  # Also run on push to main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Fetch News Data
        continue-on-error: true  # Continue workflow even if this step fails
        run: |
          mkdir -p public
          if [[ -z "${{ secrets.ALPHA_VANTAGE_API_KEY }}" ]]; then
            echo "API key is missing! Keeping existing data if available..."
            if [ ! -f public/news-data.json ]; then
              echo '{"feed": []}' > public/news-data.json
            fi
          else
            # Create a temporary file for the new data
            if curl -f -X GET "https://www.alphavantage.co/query?function=NEWS_SENTIMENT&topics=economy_fiscal&apikey=${{ secrets.ALPHA_VANTAGE_API_KEY }}" > public/news-data.temp.json; then
              # If curl succeeds, replace the old file with the new one
              mv public/news-data.temp.json public/news-data.json
              echo "Successfully fetched news data at $(date)"
            else
              echo "Failed to fetch news data. Keeping existing data if available..."
              rm -f public/news-data.temp.json
              if [ ! -f public/news-data.json ]; then
                echo '{"feed": []}' > public/news-data.json
              fi
            fi
          fi

      - name: Build Project
        run: npm run build
        env:
          CI: false

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./build
          commit_message: "Deploy and update news data: $(date)"
